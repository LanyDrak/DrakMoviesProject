<?php

namespace homeBundle\Repository;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Query\Expr;

/**
 * FilmRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class FilmRepository extends EntityRepository
{
    public function filmEtGenre()
    {
        $em = $this->getEntityManager();

        $query = $em->createQuery(
    		'SELECT f, g
            FROM homeBundle:Film f
            LEFT JOIN f.genre g'
        );

        return $query->getResult();
    }

    public function getFilmOrderByNomBuilder()
    {
        return $this->createQueryBuilder('m')
            ->orderBy('m.nom', 'ASC');
    }

    public function countFilms()
    {
        $em = $this->getEntityManager();

        $query = $em->createQuery('SELECT count(f) FROM homeBundle:Film f');

        return $query->getSingleScalarResult();
    }


    public function countFilmsByCategory()
    {
        $query = $this->getEntityManager()
            ->createQuery(
                'SELECT g.nom, COUNT(g) AS nb, g.couleur AS col
                 FROM homeBundle:Film f
                 JOIN f.genre g
                 GROUP BY g.nom'
            );

        return $query->getArrayResult();
    }


    public function last5Films()
    {
        $em = $this->getEntityManager();

        $query = $em->createQuery('SELECT f FROM homeBundle:Film f ORDER BY f.creationTimestamp DESC')
                    ->setMaxResults(5);

        return $query->getResult();
    }

    public function allFilmsbyDate()
    {
        $em = $this->getEntityManager();
        $query = $em->createQuery("SELECT f FROM homeBundle:Film f ORDER BY f.creationTimestamp DESC");

        return $query->getResult();
    }

    public function allFilmsbyDatePublished()
    {
        $em = $this->getEntityManager();
        $query = $em->createQuery("SELECT f FROM homeBundle:Film f WHERE f.published = 1 ORDER BY f.creationTimestamp DESC");

        return $query->getResult();
    }

    public function allFilmsbyGenreAndDatePublished($genre)
    {
        $em = $this->getEntityManager();
        $query = $em->createQuery("SELECT f FROM homeBundle:Film f WHERE f.published = 1 AND f.genre = $genre ORDER BY f.creationTimestamp DESC");

        return $query->getResult();
    }


    /****************************/
    /***** COUNTERS REVIEWS *****/
    /****************************/

    public function countReviewsLeftTyrell()
    {
        $em = $this->getEntityManager();

        $query = $em->createQuery('SELECT COUNT(f) FROM homeBundle:Film f WHERE f.reviewN6tyrell IS NULL');

        return $query->getSingleScalarResult();
    }

    public function countReviewsLeftNikita()
    {
        $em = $this->getEntityManager();

        $query = $em->createQuery('SELECT COUNT(f) FROM homeBundle:Film f WHERE f.reviewN6nikita IS NULL');

        return $query->getSingleScalarResult();
    }

    public function countReviewsLeftMarzoni()
    {
        $em = $this->getEntityManager();

        $query = $em->createQuery('SELECT COUNT(f) FROM homeBundle:Film f WHERE f.reviewN6marzoni IS NULL');

        return $query->getSingleScalarResult();
    }

    public function countReviewsLeftPalm()
    {
        $em = $this->getEntityManager();

        $query = $em->createQuery('SELECT COUNT(f) FROM homeBundle:Film f WHERE f.reviewN6palm IS NULL');

        return $query->getSingleScalarResult();
    }

    /*public function allFilmsByDecade1980()
    {
        $em = $this->getEntityManager();
        $query = $em->createQuery("SELECT f FROM homeBundle:Film f WHERE dateSortie BETWEEN ?1 AND ?2 ORDER BY f.creationTimestamp DESC");
        $query->setParameter(1, 1980-01-01);
        $query->setParameter(2, 1989-12-31);

        return $query->getResult();
    }*/

}
