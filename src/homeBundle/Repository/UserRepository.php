<?php

namespace homeBundle\Repository;

use Doctrine\ORM\EntityRepository;
use Symfony\Component\Security\Core\Exception\UnsupportedUserException;
use Symfony\Component\Security\Core\User\UserInterface;
use Symfony\Component\Security\Core\User\UserProviderInterface;

/**
 * UserRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UserRepository extends EntityRepository implements UserProviderInterface
{

    public function loadUserByUsername($username)
    {
        //die(dump($username));
        $query = $this->getEntityManager()
                    ->createQuery(
                        'SELECT u
                        FROM homeBundle:User u
                        WHERE u.login = :login OR u.email = :login
                        '
                    )
                    ->setParameter('login', $username);

        $user = $query->getOneOrNullResult();

        return $user;
    }

    public function refreshUser(UserInterface $user)
    {
        $class = get_class($user);
        if (!$this->supportsClass($class)) {
            throw new UnsupportedUserException(
                sprintf(
                    'Instances of "%s" are not supported.',
                    $class
                )
            );
        }
        return $this->find($user->getId());
    }

    public function supportsClass($class)
    {
        return $this->getEntityName() === $class
        || is_subclass_of($class, $this->getEntityName());
    }

    public function countUsers()
    {
        $em = $this->getEntityManager();

        $query = $em->createQuery('SELECT count(u) FROM homeBundle:User u');

        return $query->getSingleScalarResult();
    }
}
